Archive member included to satisfy reference by file (symbol)

/usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o (exit)
/usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              obj/Release/main.o (__do_copy_data)
/usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              obj/Release/main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

mode                0x2               obj/Release/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
LOAD obj/Release/main.o
LOAD /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a
LOAD /usr/avr/sys-root/lib/avr25/tiny-stack/libm.a
START GROUP
LOAD /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a
LOAD /usr/avr/sys-root/lib/avr25/tiny-stack/libm.a
LOAD /usr/avr/sys-root/lib/avr25/tiny-stack/libc.a
LOAD /usr/avr/sys-root/lib/avr25/tiny-stack/libattiny2313.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x37c
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_17
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_4
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
                0x0000000000000058                __vector_18
 .text          0x000000000000005a      0x2c0 obj/Release/main.o
                0x000000000000005a                switchLed
                0x0000000000000064                isLedOn
                0x000000000000006e                oNLed
                0x0000000000000072                oFFLed
                0x0000000000000076                buttonPressed
                0x0000000000000084                turnLeft
                0x000000000000008e                turnRight
                0x000000000000009a                stop
                0x00000000000000a2                blink
                0x00000000000000c0                __vector_6
                0x0000000000000284                init
                0x0000000000000296                isTriggered
                0x00000000000002a0                arm
                0x00000000000002d2                __vector_1
 .text          0x000000000000031a        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x000000000000031a        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x000000000000031a        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000031a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000031a       0x5e obj/Release/main.o
                0x000000000000031a                main
 .text.libgcc.mul
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000378                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000378        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000378                exit
                0x0000000000000378                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000378        0x4 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x000000000000037c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x000000000000037c                _etext = .

.data           0x0000000000800060        0x8 load address 0x000000000000037c
                0x0000000000800060                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
 .data          0x0000000000800060        0x1 obj/Release/main.o
 .data          0x0000000000800061        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800061        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x0000000000800061        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800061        0x6 obj/Release/main.o
                0x0000000000800061                waitDisarmed
                0x0000000000800063                waitArmed
                0x0000000000800065                waitControl
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800068                . = ALIGN (0x2)
 *fill*         0x0000000000800067        0x1 
                0x0000000000800068                _edata = .
                0x0000000000800068                PROVIDE (__data_end = .)

.bss            0x0000000000800068        0x8
                0x0000000000800068                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800068        0x0 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
 .bss           0x0000000000800068        0x6 obj/Release/main.o
                0x0000000000800068                motorCounter
                0x0000000000800069                counter
 .bss           0x000000000080006e        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x000000000080006e        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x000000000080006e        0x0 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080006e        0x2 obj/Release/main.o
                0x000000000080006e                mode
                0x0000000000800070                PROVIDE (__bss_end = .)
                0x000000000000037c                __data_load_start = LOADADDR (.data)
                0x0000000000000384                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800070        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800070                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x204
 *(.stab)
 .stab          0x0000000000000000       0x78 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
 .stab          0x0000000000000078       0xd8 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000150       0xb4 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0x95
 *(.stabstr)
 .stabstr       0x0000000000000000       0x95 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x40
 *(.comment)
 .comment       0x0000000000000000       0x40 obj/Release/main.o
                                         0x41 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o

.note.gnu.build-id
                0x0000000000000384       0x24
 *(.note.gnu.build-id)
 .note.gnu.build-id
                0x0000000000000384       0x24 linker stubs

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x40e
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x40e /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o

.debug_abbrev   0x0000000000000000      0x3d7
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x3d7 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x163
 *(.debug_str)
 .debug_str     0x0000000000000000      0x163 /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(bin/Release/motorControl.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__bss_end                                         /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                                  obj/Release/main.o
__do_copy_data                                    /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_copy_data.o)
                                                  obj/Release/main.o
__heap_end                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__init                                            /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__stack                                           /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_1                                        obj/Release/main.o
                                                  /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_10                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_11                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_12                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_13                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_14                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_15                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_16                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_17                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_18                                       /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_2                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_3                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_4                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_5                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_6                                        obj/Release/main.o
                                                  /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_7                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_8                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_9                                        /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vector_default                                  /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
__vectors                                         /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
_exit                                             /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
arm                                               obj/Release/main.o
blink                                             obj/Release/main.o
buttonPressed                                     obj/Release/main.o
counter                                           obj/Release/main.o
exit                                              /usr/lib64/gcc/avr/7/avr25/tiny-stack/libgcc.a(_exit.o)
                                                  /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
init                                              obj/Release/main.o
isLedOn                                           obj/Release/main.o
isTriggered                                       obj/Release/main.o
main                                              obj/Release/main.o
                                                  /usr/avr/sys-root/lib/avr25/tiny-stack/crtattiny2313.o
mode                                              obj/Release/main.o
motorCounter                                      obj/Release/main.o
oFFLed                                            obj/Release/main.o
oNLed                                             obj/Release/main.o
stop                                              obj/Release/main.o
switchLed                                         obj/Release/main.o
turnLeft                                          obj/Release/main.o
turnRight                                         obj/Release/main.o
waitArmed                                         obj/Release/main.o
waitControl                                       obj/Release/main.o
waitDisarmed                                      obj/Release/main.o
